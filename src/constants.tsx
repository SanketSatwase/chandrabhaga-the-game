import React from 'react';
import type { CatState } from './types';
import { CatAction } from './types';

export const INITIAL_CAT_STATE: CatState = {
  happiness: 70,
  hunger: 40,
  energy: 80,
};

export const MAX_STAT_VALUE = 100;
export const STAT_DECAY_INTERVAL = 4000; // ms
export const HAPPINESS_DECAY_RATE = 3;
export const HUNGER_INCREASE_RATE = 3;
export const ENERGY_DECAY_RATE = 3;

export const ACTION_EFFECTS = {
  [CatAction.FEED]: { happiness: 5, hunger: -10, energy: 0 },
  [CatAction.PET]: { happiness: 10, hunger: 0, energy: 0 },
  [CatAction.PLAY]: { happiness: 10, hunger: 0, energy: -10 },
  [CatAction.NAP]: { happiness: 5, hunger: 0, energy: 10 }
};

export const ACTION_MESSAGES = {
  [CatAction.FEED]: "Yum! That was a tasty meal.",
  [CatAction.PET]: "Chandrabhaga purrs and leans into your hand.",
  [CatAction.PLAY]: "Wow! That was a fun play session!",
  [CatAction.NAP]: "Zzzz... A refreshing cat nap."
};

// SVG Icon Components

export const FoodIcon: React.FC<{className?: string}> = ({ className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" className={className} viewBox="0 0 24 24" fill="currentColor">
    <path d="M16 4.00001L18.441 6.44101L17.026 7.85501L14.585 5.41401L16 4.00001ZM5.586 15.414L14.586 6.41401L16 7.82801L7 16.828L5.586 15.414Z" />
    <path d="M22 13V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V13H4V19H20V13H22Z" />
  </svg>
);

export const PetIcon: React.FC<{className?: string}> = ({ className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" className={className} viewBox="0 0 24 24" fill="currentColor">
    <path d="M12.982 3.01399C12.636 3.00499 12.311 3.10899 12.062 3.32499C11.633 3.69399 11.238 4.62299 11.38 5.68899C11.533 6.84099 12.213 7.81899 12.82 8.86199C13.292 9.68999 13.626 10.635 13.255 11.503C12.784 12.607 11.583 13.125 10.655 12.812C9.642 12.472 9.011 11.528 9.167 10.51C9.284 9.73699 9.686 9.07999 10.055 8.44899L8.636 7.02999C8.017 7.91799 7.729 8.98099 7.828 10.038C8.067 12.564 10.161 14.475 12.668 14.773C15.658 15.129 18.001 13.036 18.001 10.222C18.001 8.43399 17.182 6.84899 15.934 5.86299C15.132 5.21699 14.125 4.90899 13.13 4.95099C13.081 4.22599 13.346 3.32599 12.982 3.01399Z" />
    <path d="M12 2C11.172 2 10.5 2.672 10.5 3.5C10.5 4.328 11.172 5 12 5C12.828 5 13.5 4.328 13.5 3.5C13.5 2.672 12.828 2 12 2Z" />
    <path d="M6 7C5.172 7 4.5 7.672 4.5 8.5C4.5 9.328 5.172 10 6 10C6.828 10 7.5 9.328 7.5 8.5C7.5 7.672 6.828 7 6 7Z" />
    <path d="M3 13C2.172 13 1.5 13.672 1.5 14.5C1.5 15.328 2.172 16 3 16C3.828 16 4.5 15.328 4.5 14.5C4.5 13.672 3.828 13 3 13Z" />
    <path d="M6 18C5.172 18 4.5 18.672 4.5 19.5C4.5 20.328 5.172 21 6 21C6.828 21 7.5 20.328 7.5 19.5C7.5 18.672 6.828 18 6 18Z" />
  </svg>
);

export const PlayIcon: React.FC<{className?: string}> = ({ className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" className={className} viewBox="0 0 24 24" fill="currentColor">
    <path d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM9.92965 16.0707C9.53912 16.4612 8.90596 16.4612 8.51543 16.0707C8.12491 15.6802 8.12491 15.047 8.51543 14.6565L10.1718 13.0001L8.51543 11.3437C8.12491 10.9532 8.12491 10.32 8.51543 9.92948C8.90596 9.53896 9.53912 9.53896 9.92965 9.92948L11.586 11.5859L13.2424 9.92948C13.6329 9.53896 14.2661 9.53896 14.6566 9.92948C15.0471 10.32 15.0471 10.9532 14.6566 11.3437L13.0002 13.0001L14.6566 14.6565C15.0471 15.047 15.0471 15.6802 14.6566 16.0707C14.2661 16.4612 13.6329 16.4612 13.2424 16.0707L11.586 14.4143L9.92965 16.0707Z" />
  </svg>
);

export const NapIcon: React.FC<{className?: string}> = ({ className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className={className}>
    <path d="M11.5 2C6.805 2 3 6.335 3 11.035C3 15.115 5.925 18.59 9.775 19.595C10.235 19.685 10.5 19.345 10.5 18.915C10.5 18.525 10.355 17.655 10.325 17.185C10.305 16.785 10.555 16.535 10.935 16.535C13.685 16.535 15.5 14.535 15.5 11.235C15.5 8.335 13.565 5.5 10.375 5.5C9.015 5.5 7.825 6.205 7.155 7.235C7.225 7.025 7.315 6.815 7.425 6.605C7.745 5.935 8.355 5.015 9.355 5.015C10.655 5.015 11.5 5.865 11.5 6.945C11.5 8.375 10.555 9.615 10.555 10.375C10.555 10.825 10.845 11.125 11.235 11.125C11.965 11.125 12.5 10.505 12.5 9.535C12.5 8.105 14.185 7.005 15.655 7.005C18.005 7.005 20 8.965 20 11.535C20 14.785 17.5 17.535 14.285 17.535C12.835 17.535 11.835 16.635 11.585 15.985C11.215 14.975 11.5 13.915 11.5 13.195C11.5 12.065 12.235 11.185 13.125 10.805C13.435 10.675 13.5 10.425 13.5 10.205C13.5 9.885 13.235 9.635 12.925 9.635C12.605 9.635 12.335 9.875 12.335 10.195C12.335 10.335 12.315 10.505 12.265 10.625C11.665 12.185 10.315 14.535 8.525 14.535C6.025 14.535 4.5 12.045 4.5 9.535C4.5 7.225 6.225 4.965 8.415 4.965C9.285 4.965 10.005 5.345 10.385 5.955L10.5 5.725C10.5 3.995 10.115 2.805 8.915 2.225C9.725 2.055 10.585 2 11.5 2Z"/>
  </svg>
);